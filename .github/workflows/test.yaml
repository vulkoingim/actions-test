name: Dev

on:
  workflow_dispatch:
  issue_comment:
    types: [ created ]

jobs:
  configuration:
    if: |
      (github.event.issue.author_association == 'OWNER' || github.event.issue.author_association == 'MEMBER') &&
      (github.event.issue.pull_request && contains(github.event.comment.body, '/werft run'))
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.comment-branch.outputs.head_ref }}
      run_url: ${{ steps.output.outputs.run_url }}
      run_id: ${{ steps.output.outputs.run_id }}
      #      pr_number: ${{ github.event.issue.number }}
      recreate_vm: ${{ contains(github.event.comment.body, 'recreate-vm') }}
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Test
        id: testoutput
        run: |
          echo "test test"
          echo ${{ github.repository }}
          echo ${{ toJSON(github) }}
      - name: Trigger Workflow
        uses: actions/github-script@v6
        with:
          script: |
            try{
              const result = await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'dispatch.yaml',
                ref: '${{ steps.comment-branch.outputs.head_ref }}',
                inputs: {
                  "recreate_vm": '${{ contains(github.event.comment.body, 'recreate-vm') }}'
                }
              })
              console.log(result);
            } catch(error) {
               console.error(error);
               core.setFailed(error);
            }
      - name: Get run URL
        id: output
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          sleep 5
          url=$(gh run list --repo vulkoingim/actions-test --workflow dispatch.yaml -b ${{ steps.comment-branch.outputs.head_ref }} --json event,url,status -q '[.[] | select(.event=="workflow_dispatch") | select(.status!="completed").url][0]')
          {
            echo "run_url=${url}"
            echo "run_id=${url##*/}"
          } >> $GITHUB_OUTPUT

  comment:
    runs-on: ubuntu-latest
    needs: [ configuration ]
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `#### Comment triggered a workflow run
            
              Started workflow run: [${{ needs.configuration.outputs.run_id }}](${{ needs.configuration.outputs.run_url }}) 
              * \`recreate_vm: ${{ needs.configuration.outputs.recreate_vm }}\``
            })
