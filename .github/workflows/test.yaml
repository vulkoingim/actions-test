name: Dev

on:
  workflow_dispatch:
  issue_comment:
    types: [ created ]

jobs:
  configuration:
    if: |
      (github.event.issue.author_association == 'OWNER' || github.event.issue.author_association == 'MEMBER') &&
      (github.event.issue.pull_request && contains(github.event.comment.body, '/werft run'))
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.comment-branch.outputs.head_ref }}
      run_url: ${{ steps.output.outputs.result.html_url }}
      run_id: ${{ steps.output.outputs.result.id }}
      #      pr_number: ${{ github.event.issue.number }}
      recreate_vm: ${{ contains(github.event.comment.body, 'recreate-vm') }}
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Trigger Workflow
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'dispatch.yaml',
              ref: '${{ steps.comment-branch.outputs.head_ref }}',
              inputs: {
                "recreate_vm": '${{ contains(github.event.comment.body, 'recreate-vm') }}'
              }
            })
      # Comment with a link to the job that got triggered
      - uses: actions/github-script@v6
        id: output
        with:
          result-encoding: string
          github-token: ${{ github.token }}
          script: |
            await new Promise(r => setTimeout(r, 5000));
            let result = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'dispatch.yaml',
              branch: '${{ steps.comment-branch.outputs.head_ref }}',
              event: 'workflow_dispatch',
              per_page: 20
            });
            
            var url = result.data.workflow_runs
              .filter(function (e) {
                e.status != 'completed' && e.status != 'skipped'
            });
            
            console.log(url);
            console.log(url[0]);
            console.log(url[0].html_url);
            console.log(url[0]['html_url']);
            
            return url[0].html_url;
      - name: Get run URL
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo ${{ toJSON(steps.output.outputs) }}
          echo ${{ steps.output.outputs.result }}
  #      - name: Get run URL
  #        id: output
  #        env:
  #          GH_TOKEN: ${{ github.token }}
  #        run: |
  #          sleep 5
  #          url=$(gh run list --repo vulkoingim/actions-test --workflow dispatch.yaml -b ${{ steps.comment-branch.outputs.head_ref }} --json event,url,status -q '[.[] | select(.event=="workflow_dispatch") | select(.status!="completed").url][0]')
  #          {
  #            echo "run_url=${url}"
  #            echo "run_id=${url##*/}"
  #          } >> $GITHUB_OUTPUT

  comment:
    runs-on: ubuntu-latest
    needs: [ configuration ]
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            let commentBody = '${{ github.event.comment.body }}'
            commentBody += `\n\n#### Comment triggered a workflow run

              Started workflow run: [${{ needs.configure.outputs.run_id }}](${{ needs.configure.outputs.run_url }})
              * \`recreate_vm: ${{ steps.configure.outputs.recreate-vm }}\``
            github.rest.issues.updateComment({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              body: commentBody
            })
  #      - name: Test
  #        id: testoutput
  #        run: |
  #          echo "test test"
  #          echo ${{ github.repository }}
  #          echo '${{ toJSON(github) }}'

  comment-fail:
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    needs: [ comment, configuration ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            let commentBody = '${{ github.event.comment.body }}'
            commentBody += "\n\n Chat ops job failed. See [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details"
            github.rest.issues.updateComment({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              body: commentBody
            })
