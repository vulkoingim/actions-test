name: Dispatch
on:
#  push:
  pull_request:
    types: [ opened, edited ]
  workflow_dispatch:
    inputs:
      recreate_vm:
        required: true
        type: string
        description: "ad"
        default: "false"

jobs:
  diff:
    name: Skip check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: "Check PR diff"
        id: pr-diff
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          {
          if ! diff <( echo '${{ github.event.changes.body.from }}') <(echo '${{ github.event.pull_request.body }}') | grep -e '\[x\]' -e '\[X\]'; then
             echo "pr_no_diff_skip"
          fi
          } >> $GITHUB_OUTPUT

  configuration:
    name: Configure job parameters
    needs: [ diff ]
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.head_ref || github.ref }}-configuration
      cancel-in-progress: true
    outputs:
      is_main_branch: ${{ steps.output.outputs.is_main_branch }}
      version: ${{ steps.output.outputs.version }}
      preview_enable: ${{ steps.output.outputs.preview_enable }}
      preview_infra_provider: ${{ steps.output.outputs.preview_infra_provider }}
      with_github_actions: ${{ steps.output.outputs.with_github_actions }}
      build_no_cache: ${{ steps.output.outputs.build_no_cache }}
      build_no_test: ${{ steps.output.outputs.build_no_test }}
      build_leeway_target: ${{ steps.output.outputs.build_leeway_target }}
      with_large_vm: ${{ steps.output.outputs.with_large_vm }}
      publish_to_npm: ${{ steps.output.outputs.publish_to_npm }}
      publish_to_jbmp: ${{ steps.output.outputs.publish_to_jbmp }}
      with_ws_manager_mk2: ${{ steps.output.outputs.with_ws_manager_mk2 }}
      with_dedicated_emulation: ${{ steps.output.outputs.with_dedicated_emulation }}
      with_ee_license: ${{ steps.output.outputs.with_ee_license }}
      with_slow_database: ${{ steps.output.outputs.with_slow_database }}
      analytics: ${{ steps.output.outputs.analytics }}
      workspace_feature_flags: ${{ steps.output.outputs.workspace_feature_flags }}
    steps:
      #      - name: "Set prd"
      #        id: prd
      #        if: ${{ inputs.pr_number != '' }}
      #        env:
      #          PR_DESC: ${{ github.event.pull_request.body }}
      #          GH_TOKEN: ${{ github.token }}
      #        shell: bash
      #        run: |
      #          if [[ ${{ inputs.pr_number }} != "" ]]; then
      #            echo 'PR_DESC<<EOF' >> $GITHUB_ENV
      #            echo "$(gh pr view ${{ inputs.pr_number }} --json body -t {{.body}} --repo vulkoingim/actions-test)" >> $GITHUB_ENV
      #            echo 'EOF' >> $GITHUB_ENV
      #          fi
      - name: "Determine Branch"
        id: branches
        uses: transferwise/sanitize-branch-name@v1
      - uses: 8BitJonny/gh-get-current-pr@2.2.0
        if: github.event_name != 'pull_request'
        id: pr
        with:
          # Authetication token to access GitHub APIs. (Can be omitted by default.)
          github-token: ${{ github.token }}
          # Verbose setting SHA when using Pull_Request event trigger to fix #16. (For push even trigger this is not necessary.)
          sha: ${{ github.event.pull_request.head.sha }}
      - name: Detect PR
        id: pr-details
        run: |
          echo 'test2'
          echo '# Direct access to common PR properties'
          echo 'prNumber: ${{ steps.PR.outputs.number }}'
          echo 'prUrl: ${{ steps.PR.outputs.pr_url }}'
          echo 'prTitle: ${{ steps.PR.outputs.pr_title }}'
          echo "prBody: '${{ steps.PR.outputs.pr_body }}'"
          echo 'prCreatedAt: ${{ steps.PR.outputs.pr_created_at }}'
          echo 'prMergedAt: ${{ steps.PR.outputs.pr_merged_at }}'
          echo 'prClosedAt: ${{ steps.PR.outputs.pr_closed_at }}'
          echo 'prLabel: ${{ steps.PR.outputs.pr_labels }}'
      - name: "Set outputs"
        id: output
        env:
          PR_DESC: ${{ steps.pr.outputs.pr_body }}
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          {
          #            [[ ${{ inputs.pr_number }} != "" ]] && PR_DESC=$(gh pr view ${{ inputs.pr_number }} --json body -t {{.body}} --repo vulkoingim/actions-test)
          echo "preview_enable=${{ contains(env.PR_DESC, '[x] /werft with-preview') }}"
          echo "preview_infra_provider=${{ contains(env.PR_DESC, '[X] /werft with-gce-vm') && 'gce' || 'harvester' }}"
          echo "with_large_vm=${{ contains(env.PR_DESC, '[X] /werft with-large-vm') }}"
          } >> $GITHUB_OUTPUT

  dispatch:
    needs: [ configuration ]
    runs-on: ubuntu-latest
    steps:
      - name: Any Name Bash Test Step
        shell: bash
        run: |
          echo ${{ inputs.recreate_vm }}
          echo ${{ needs.configuration.outputs.preview_enable }}
          echo ${{ needs.configuration.outputs.preview_infra_provider }}
          echo ${{ needs.configuration.outputs.with_large_vm }}
      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@master
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Dispatch
          sha: ${{ github.sha }}
