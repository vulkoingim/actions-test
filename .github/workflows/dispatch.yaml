name: Dispatch
on:
  workflow_dispatch:
    inputs:
      recreate_vm:
        required: true
        type: string
        description: "ad"
        default: "false"
      pr_description:
        required: true
        type: string
        description: "ad"
        default: "false"

jobs:
  configuration:
    name: Configure job parameters
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.head_ref || github.ref }}-configuration
      cancel-in-progress: true
    outputs:
      is_main_branch: ${{ steps.output.outputs.is_main_branch }}
      version: ${{ steps.output.outputs.version }}
      preview_enable: ${{ steps.output.outputs.preview_enable }}
      preview_infra_provider: ${{ steps.output.outputs.preview_infra_provider }}
      with_github_actions: ${{ steps.output.outputs.with_github_actions }}
      build_no_cache: ${{ steps.output.outputs.build_no_cache }}
      build_no_test: ${{ steps.output.outputs.build_no_test }}
      build_leeway_target: ${{ steps.output.outputs.build_leeway_target }}
      with_large_vm: ${{ steps.output.outputs.with_large_vm }}
      publish_to_npm: ${{ steps.output.outputs.publish_to_npm }}
      publish_to_jbmp: ${{ steps.output.outputs.publish_to_jbmp }}
      with_ws_manager_mk2: ${{ steps.output.outputs.with_ws_manager_mk2 }}
      with_dedicated_emulation: ${{ steps.output.outputs.with_dedicated_emulation }}
      with_ee_license: ${{ steps.output.outputs.with_ee_license }}
      with_slow_database: ${{ steps.output.outputs.with_slow_database }}
      analytics: ${{ steps.output.outputs.analytics }}
      workspace_feature_flags: ${{ steps.output.outputs.workspace_feature_flags }}
    steps:
      - name: "Determine Branch"
        id: branches
        uses: transferwise/sanitize-branch-name@v1
      - name: "Set outputs"
        id: output
        env:
          PR_DESC: '${{ github.event.pull_request.body }}'
        shell: bash
        run: |
          {
            echo "preview_enable=${{ contains(github.event.pull_request.body, '[x] /werft with-preview') }}"
            echo "preview_infra_provider=${{ contains(github.event.pull_request.body, '[X] /werft with-gce-vm') && 'gce' || 'harvester' }}"
            echo "with_large_vm=${{ contains(github.event.pull_request.body, '[X] /werft with-large-vm') }}"
          } >> $GITHUB_OUTPUT

  dispatch:
    needs: [ configuration ]
    runs-on: ubuntu-latest
    steps:
      - name: Any Name Bash Test Step
        env:
          PR_DESC: '${{ github.event.pull_request.body ||  }}'
        shell: bash
        run: |
          echo ${{ inputs.recreate_vm }}
          echo ${{ needs.configuration.outputs.preview_enable }}
          echo ${{ needs.configuration.outputs.preview_infra_provider }}
          echo ${{ needs.configuration.outputs.with_large_vm }}
